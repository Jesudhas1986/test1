Got it üëç Let‚Äôs build a simple Python + Docker example that reads data from an API and returns the value.


---

1. Python script (app.py)

This script fetches data from a sample API (https://jsonplaceholder.typicode.com/todos/1) and prints it.

import requests
from flask import Flask, jsonify

app = Flask(__name__)

@app.route("/get-data", methods=["GET"])
def get_data():
    url = "https://jsonplaceholder.typicode.com/todos/1"
    response = requests.get(url)
    if response.status_code == 200:
        return jsonify(response.json())
    else:
        return jsonify({"error": "Failed to fetch data"}), response.status_code

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)


---

2. Requirements file (requirements.txt)

flask
requests


---

3. Dockerfile

# Use Python base image
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Copy files
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

COPY app.py .

# Expose Flask port
EXPOSE 5000

# Run the app
CMD ["python", "app.py"]


---

4. Build & Run

# Build image
docker build -t python-api-sample .

# Run container
docker run -p 5000:5000 python-api-sample


---

5. Test API

Once running, open in browser or curl:

curl http://localhost:5000/get-data

üëâ Expected output:

{
  "userId": 1,
  "id": 1,
  "title": "delectus aut autem",
  "completed": false
}


---

Would you like me to extend this so the API URL can be passed as an environment variable (so you can reuse the container for any API)?

