give me simple docker sample commands 
ChatGPT said:

Got it 👍 Here are some simple Docker sample commands (same work with Podman too if you alias it):

🔹 Basic Commands
docker --version               # Check Docker version
docker info                    # Show Docker system info
docker ps                      # List running containers
docker ps -a                   # List all containers (including stopped)
docker images                  # List all images

🔹 Run a Container
docker run hello-world         # Run test image
docker run -it ubuntu bash     # Start Ubuntu container with interactive shell
docker run -d -p 8080:80 nginx # Run nginx in background and expose port 8080

🔹 Manage Containers
docker stop <container_id>     # Stop a running container
docker start <container_id>    # Start a stopped container
docker restart <container_id>  # Restart container
docker rm <container_id>       # Remove container

🔹 Manage Images
docker pull ubuntu             # Download Ubuntu image
docker rmi ubuntu              # Remove image
docker build -t myapp .        # Build image from Dockerfile

🔹 Useful
docker logs <container_id>     # Show logs of container
docker exec -it <container_id> bash   # Enter into a running container
docker inspect <container_id>  # Show detailed info


👉 Do you want me to also give you a small step-by-step workflow (pull → run → check logs → stop → remove) like a mini practice session?

You said:
podman commands
ChatGPT said:

Perfect 👍 Since Podman is Docker-compatible, almost all Docker commands work with podman.
Here’s a cheat sheet of Podman sample commands:

🔹 Basic Info
podman --version            # Check Podman version
podman info                 # Show Podman system info
podman ps                   # List running containers
podman ps -a                # List all containers (including stopped)
podman images               # List all images

🔹 Run Containers
podman run hello-world      # Run test image
podman run -it ubuntu bash  # Start Ubuntu container with interactive shell
podman run -d -p 8080:80 nginx   # Run nginx in background, expose port 8080

🔹 Manage Containers
podman stop <container_id>     # Stop a running container
podman start <container_id>    # Start a stopped container
podman restart <container_id>  # Restart container
podman rm <container_id>       # Remove container

🔹 Manage Images
podman pull ubuntu             # Download Ubuntu image
podman rmi ubuntu              # Remove image
podman build -t myapp .        # Build image from Dockerfile

🔹 Useful Tools
podman logs <container_id>           # Show logs of container
podman exec -it <container_id> bash  # Enter into a running container
podman inspect <container_id>        # Show detailed info

🔹 Podman-Specific
podman pod create --name mypod -p 8080:80    # Create a pod (group of containers)
podman pod ps                               # List pods
podman generate kube <container_id>         # Export container as Kubernetes YAML
podman system prune -a                      # Clean up unused images/containers


✅ Quick difference from Docker:

Podman doesn’t require sudo (it’s rootless by default).

Podman has pods (like in Kubernetes) where you can group containers.

👉 Do you want me to prepare a side-by-side comparison of Docker vs Podman commands so you can see the mapping clearly?
